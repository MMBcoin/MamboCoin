# Copyright (c) 2009-2010 Satoshi Nakamoto
# Distributed under the MIT/X11 software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

BOOST_SUFFIX?==mgw49-mt-s-1_50

USE_UPNP:=0

INCLUDEPATHS= \
 -I"$(CURDIR)" \
 -I"C:\deps\boost_1_50_0" \
 -I"C:\deps\db-4.8.30.NC\build_unix" \
 -I"C:\deps\openssl-1.0.2o\include"

LIBPATHS= \
 -L"$(CURDIR)\leveldb" \
 -L"C:\deps\boost_1_50_0\stage\lib" \
 -L"C:\deps\db-4.8.30.NC\build_unix" \
 -L"C:\deps\openssl-1.0.2o"

LIBS= \
 -l leveldb \
 -l boost_system-mgw49-mt-s-1_50 \
 -l boost_filesystem-mgw49-mt-s-1_50 \
 -l boost_program_options-mgw49-mt-s-1_50 \
 -l boost_thread-mgw49-mt-s-1_50 \
 -l boost_chrono-mgw49-mt-s-1_50 \
 -l db_cxx \
 -l ssl \
 -l crypto
 

 BOOST_LIB_SUFFIX=-mgw46-mt-sd-1_50
 BOOST_INCLUDE_PATH=$(CURDIR)/boost_1_50_0
 BOOST_LIB_PATH=$(CURDIR)/boost_1_50_0/stage/lib
 BDB_INCLUDE_PATH=$(CURDIR)/db-5.3.28/build_unix
 BDB_LIB_PATH=$(CURDIR)/db-5.3.28/build_unix
 OPENSSL_INCLUDE_PATH=$(CURDIR)/openssl/include
 OPENSSL_LIB_PATH=$(CURDIR)/openssl

DEFS=-DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB -DBOOST_SPIRIT_THREADSAFE
DEBUGFLAGS=-g
CFLAGS=-pthread -O3 -msse2 -w -Wall -Wextra -Wno-ignored-qualifiers -Wformat -Wformat-security -Wno-unused-parameter $(DEBUGFLAGS) $(DEFS) $(INCLUDEPATHS)
LDFLAGS=-Wl,--dynamicbase -Wl,--nxcompat -Wl,--large-address-aware -static

TESTDEFS = -DTEST_DATA_DIR=$(abspath test/data)

ifndef USE_UPNP
	override USE_UPNP = -
endif
ifneq (${USE_UPNP}, -)
 INCLUDEPATHS += -I"$(CURDIR)"
 LIBPATHS += -L"C:\deps\miniupnpc"
 LIBS += -l miniupnpc -l iphlpapi
 DEFS += -DSTATICLIB -DUSE_UPNP=$(USE_UPNP)
endif

ifndef ENABLE_WALLET
    override ENABLE_WALLET = 1
endif
ifneq (${ENABLE_WALLET}, 0)
    DEFS += -DENABLE_WALLET
endif

LIBS += -l kernel32 -l user32 -l gdi32 -l comdlg32 -l winspool -l winmm -l shell32 -l comctl32 -l ole32 -l oleaut32 -l uuid -l rpcrt4 -l advapi32 -l ws2_32 -l mswsock -l shlwapi

# TODO: make the mingw builds smarter about dependencies, like the linux/osx builds are
HEADERS = $(wildcard *.h)

OBJS= \
    obj/alert.o \
    obj/version.o \
    obj/checkpoints.o \
    obj/netbase.o \
    obj/addrman.o \
    obj/crypter.o \
    obj/key.o \
    obj/init.o \
    obj/bitcoind.o \
    obj/keystore.o \
    obj/core.o \
    obj/main.o \
    obj/net.o \
    obj/protocol.o \
    obj/rpcclient.o \
    obj/rpcprotocol.o \
    obj/rpcserver.o \
    obj/rpcmisc.o \
    obj/rpcnet.o \
    obj/rpcblockchain.o \
    obj/rpcrawtransaction.o \
    obj/timedata.o \
    obj/script.o \
    obj/sync.o \
    obj/txmempool.o \
    obj/util.o \
    obj/hash.o \
    obj/noui.o \
    obj/kernel.o \
    obj/pbkdf2.o \
    obj/scrypt.o \
    obj/scrypt-x86.o \
    obj/scrypt-x86_64.o \
    obj/roireportdialog.o \
    obj/chainparams.o

ifeq (${USE_WALLET}, 1)
    DEFS += -DENABLE_WALLET
    OBJS += \
        obj/db.o \
        obj/miner.o \
        obj/rpcdump.o \
        obj/rpcmining.o \
        obj/rpcwallet.o \
        obj/wallet.o \
        obj/walletdb.o
endif

all: mambocoind.exe

LIBS += $(CURDIR)/leveldb/libleveldb.a $(CURDIR)/leveldb/libmemenv.a
DEFS += $(addprefix -I,$(CURDIR)/leveldb/include)
DEFS += $(addprefix -I,$(CURDIR)/leveldb/helpers)
OBJS += obj/txdb-leveldb.o
leveldb/libleveldb.a:
	cd leveldb; make; cd ..
obj/txdb-leveldb.o: leveldb/libleveldb.a

obj/%.o: %.cpp $(HEADERS)
	g++ -c $(CFLAGS) -o $@ $<

obj/scrypt-x86.o: scrypt-x86.S
	$(CXX) -c $(xCXXFLAGS) -MMD -o $@ $<

obj/scrypt-x86_64.o: scrypt-x86_64.S
	$(CXX) -c $(xCXXFLAGS) -MMD -o $@ $<

mambocoind.exe: $(OBJS:obj/%=obj/%)
	g++ $(CFLAGS) $(LDFLAGS) -o $@ $(LIBPATHS) $^ $(LIBS)

clean:
	-del /Q mambocoind
	-del /Q obj\*

FORCE:
